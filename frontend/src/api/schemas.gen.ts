// This file is auto-generated by @hey-api/openapi-ts

export const Body_login_users_login_postSchema = {
    properties: {
        grant_type: {
            anyOf: [
                {
                    type: 'string',
                    pattern: 'password'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Grant Type'
        },
        username: {
            type: 'string',
            title: 'Username'
        },
        password: {
            type: 'string',
            title: 'Password'
        },
        scope: {
            type: 'string',
            title: 'Scope',
            default: ''
        },
        client_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Id'
        },
        client_secret: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Secret'
        }
    },
    type: 'object',
    required: ['username', 'password'],
    title: 'Body_login_users_login_post'
} as const;

export const ExerciseCreateSchema = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        }
    },
    type: 'object',
    required: ['name'],
    title: 'ExerciseCreate'
} as const;

export const ExerciseReadSchema = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        id: {
            type: 'integer',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['name', 'id'],
    title: 'ExerciseRead'
} as const;

export const ExerciseUpdateSchema = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        }
    },
    type: 'object',
    required: ['name'],
    title: 'ExerciseUpdate'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const MessageSchema = {
    properties: {
        msg: {
            type: 'string',
            title: 'Msg'
        }
    },
    type: 'object',
    required: ['msg'],
    title: 'Message'
} as const;

export const PlanCreateSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        start_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        }
    },
    type: 'object',
    title: 'PlanCreate'
} as const;

export const PlanReadSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        start_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        id: {
            type: 'integer',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['id'],
    title: 'PlanRead'
} as const;

export const PlanRoutineLinkSchema = {
    properties: {
        plan_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Plan Id'
        },
        routine_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Routine Id'
        }
    },
    type: 'object',
    title: 'PlanRoutineLink'
} as const;

export const PlanUpdateSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        start_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        }
    },
    type: 'object',
    title: 'PlanUpdate'
} as const;

export const RoutineCreateSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        }
    },
    type: 'object',
    title: 'RoutineCreate'
} as const;

export const RoutineExerciseLinkSchema = {
    properties: {
        routine_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Routine Id'
        },
        exercise_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Exercise Id'
        }
    },
    type: 'object',
    title: 'RoutineExerciseLink'
} as const;

export const RoutineReadSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        id: {
            type: 'integer',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['id'],
    title: 'RoutineRead'
} as const;

export const RoutineUpdateSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        }
    },
    type: 'object',
    title: 'RoutineUpdate'
} as const;

export const TokenSchema = {
    properties: {
        access_token: {
            type: 'string',
            title: 'Access Token'
        },
        token_type: {
            type: 'string',
            title: 'Token Type'
        }
    },
    type: 'object',
    required: ['access_token', 'token_type'],
    title: 'Token'
} as const;

export const UserCreateSchema = {
    properties: {
        username: {
            type: 'string',
            minLength: 1,
            title: 'Username'
        },
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        password: {
            type: 'string',
            minLength: 1,
            title: 'Password',
            description: `Only alphanumeric characters and !"#$%&'()*+,-./:;<=>?@[\]^_\`{|}~ are allowed in this field`
        }
    },
    type: 'object',
    required: ['username', 'email', 'password'],
    title: 'UserCreate'
} as const;

export const UserReadSchema = {
    properties: {
        username: {
            type: 'string',
            minLength: 1,
            title: 'Username'
        },
        email: {
            type: 'string',
            title: 'Email'
        },
        id: {
            type: 'integer',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['username', 'email', 'id'],
    title: 'UserRead'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;

export const WorkoutSchema = {
    properties: {
        date: {
            type: 'string',
            format: 'date',
            title: 'Date'
        },
        id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Id'
        },
        routine_id: {
            type: 'integer',
            title: 'Routine Id'
        }
    },
    type: 'object',
    required: ['date', 'routine_id'],
    title: 'Workout'
} as const;

export const WorkoutCreateSchema = {
    properties: {
        date: {
            type: 'string',
            format: 'date',
            title: 'Date'
        },
        routine_id: {
            type: 'integer',
            title: 'Routine Id'
        }
    },
    type: 'object',
    required: ['date', 'routine_id'],
    title: 'WorkoutCreate'
} as const;

export const WorkoutExerciseLinkSchema = {
    properties: {
        workout_id: {
            type: 'integer',
            title: 'Workout Id'
        },
        exercise_id: {
            type: 'integer',
            title: 'Exercise Id'
        },
        sets: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Sets'
        },
        reps: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Reps'
        },
        seconds_of_rest: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Seconds Of Rest'
        },
        weight: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Weight'
        }
    },
    type: 'object',
    required: ['workout_id', 'exercise_id'],
    title: 'WorkoutExerciseLink'
} as const;

export const WorkoutReadSchema = {
    properties: {
        date: {
            type: 'string',
            format: 'date',
            title: 'Date'
        },
        id: {
            type: 'integer',
            title: 'Id'
        },
        routine_id: {
            type: 'integer',
            title: 'Routine Id'
        }
    },
    type: 'object',
    required: ['date', 'id', 'routine_id'],
    title: 'WorkoutRead'
} as const;

export const WorkoutUpdateSchema = {
    properties: {
        date: {
            type: 'string',
            format: 'date',
            title: 'Date'
        }
    },
    type: 'object',
    required: ['date'],
    title: 'WorkoutUpdate'
} as const;